name: Test GHA workflow

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/labeler@v5
      - uses: Brightspace/third-party-actions@actions/checkout
        # For correct work of `Get PULL_REQUEST_NUMBER (push)`-step
        with:
          fetch-depth: 0

      - name: Get PULL_REQUEST_NUMBER (push)
        if: ${{ github.event_name == 'push' }}
        # get PR number from the latest commit
        run: |
          pr_number="$(git log -1 | grep -oP 'Merge pull request #\K\d+' || echo "")"
          echo "PULL_REQUEST_NUMBER=$pr_number"
          echo "PULL_REQUEST_NUMBER=$pr_number" >> $GITHUB_ENV

      - name: Get PULL_REQUEST_NUMBER (pull_request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "PULL_REQUEST_NUMBER=$PR_NUMBER"
          echo "PULL_REQUEST_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
      
      - name: Print PULL_REQUEST_NUMBER
        run: |
          echo "PR NUMBER: $PULL_REQUEST_NUMBER"

      - name: Set DEFAULT environment variables
        run: |
          condition_result=0;
          echo "RES=$condition_result"
          echo "RES=$condition_result" >> $GITHUB_ENV
          echo "RES=$condition_result" >> $GITHUB_OUTPUT

      - name: Set environment variables
        run: |
          if [ -z $PULL_REQUEST_NUMBER ]
          then
            echo There are no PRs available! Using the default values of environment variables
            exit 0;
          fi
          fact1_label="$(gh api repos/$REPO/pulls/$PULL_REQUEST_NUMBER --jq 'if any(.labels.[]; .name=="fact1") then 1 else 0 end')"
          fact2_label="$(gh api repos/$REPO/pulls/$PULL_REQUEST_NUMBER --jq 'if any(.labels.[]; .name=="fact2") then 1 else 0 end')"
          condition_result=0
          if [ $fact1_label == 1 ] && [ $fact2_label == 0 ]
          then
            condition_result=1
          fi
          echo "RES=$condition_result"
          echo "RES=$condition_result" >> $GITHUB_ENV
          echo "RES=$condition_result" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}

  actual_job:
    if: ${{ needs.triage.outputs.RES == '0' }}
    needs: [ triage ]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps: 
      - name: Greeting
        run: |
          echo Hello from Actual Job